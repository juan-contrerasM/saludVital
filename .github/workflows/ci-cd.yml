name: CI/CD - VitalApp

on:
  push:
    branches: [ "main" ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout cÃ³digo
        uses: actions/checkout@v4

      # === Etapa: Backend ===
      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Instalar dependencias del backend
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Pruebas backend (opcional)
        run: |
          cd backend
          pytest || echo "Sin pruebas definidas"

      # === Etapa: Frontend (DESACTIVADA por ahora) ===
      # - name: Configurar Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: '20'
      #
      # - name: Instalar dependencias del frontend
      #   run: |
      #     cd frontend
      #     npm install
      #     npm run build

      # === ConstrucciÃ³n Docker (solo backend) ===
      - name: Build Docker image (backend)
        run: |
          docker build -t vital-backend -f docker/Dockerfile.backend .

      # === Despliegue en AWS EC2 ===
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_KEY }}
          script: |
            echo "ðŸš€ Desplegando en EC2..."

            # Si el directorio no existe, clonar el repo
            cd /home/ubuntu/saludVital || git clone https://github.com/${{ github.repository }} saludVital
            cd saludVital

            # Asegurar que el cÃ³digo estÃ© actualizado
            git fetch origin main
            git reset --hard origin/main

            # Crear el archivo .env del backend (solo con la URL)
            echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" > backend/.env

            # Crear el .env del frontend con la URL del backend
            echo "VITE_API_URL=http://3.17.207.163:8000" > frontend/.env

            # Levantar con Docker Compose
            cd docker
            docker compose down
            docker compose up -d --build

            echo "âœ… Despliegue completado correctamente"
