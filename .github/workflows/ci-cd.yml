name: CI/CD - SaludVital

on:
  push:
    branches: [ "main" ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout cÃ³digo
        uses: actions/checkout@v4

      # === Etapa Backend ===
      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Instalar dependencias del backend
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Lint Backend con flake8
        run: |
          cd backend
          # --count muestra el nÃºmero total de errores
          # --select=E9,F63,F7,F82 --show-source --statistics muestra errores especÃ­ficos + no usados
          # --max-complexity=10 --max-line-length=127 ajusta lÃ­mites (opcional)
          # --ignore=... puedes aÃ±adir cÃ³digos de error a ignorar si es necesario
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Puedes ajustar los flags de flake8 segÃºn necesiten

      # === Etapa Frontend ===
      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Instalar dependencias del frontend # Modificado para instalar todo
        run: |
          cd frontend
          npm install

      - name: Lint Frontend con ESLint
        run: |
          cd frontend
          # Ejecuta el script lint que create-react-app usualmente configura
          # O puedes usar directamente: npx eslint . --ext .js,.jsx
          npm run lint -- --no-fix # AÃ±adimos --no-fix para que no intente arreglar, solo reporte

      - name: Construir frontend
        run: |
          cd frontend
          npm run build

      # === ConstrucciÃ³n Docker ===
      - name: Build Docker images
        run: |
          docker build -t vital-backend -f docker/Dockerfile.backend .
          docker build -t vital-frontend -f docker/Dockerfile.frontend .

      # === Despliegue en AWS EC2 ===
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_KEY }}
          script: |
            echo "ðŸš€ Desplegando en EC2..."

            # Si el directorio no existe, clonar el repo
            cd /home/ubuntu/saludVital || git clone https://github.com/${{ github.repository }} saludVital
            cd saludVital

            # Asegurar que el cÃ³digo estÃ© actualizado
            git fetch origin main
            git reset --hard origin/main

            # Crear el archivo .env del backend (solo con la URL)
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > backend/.env
            echo "EMAIL_SENDER=${{ secrets.EMAIL_SENDER }}" >> backend/.env
            echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> backend/.env

            # Crear el .env del frontend con la URL del backend
            echo "REACT_APP_BACKEND_URL=${{ secrets.REACT_APP_BACKEND_URL }}" > frontend/.env

            # Levantar con Docker Compose
            cd docker
            docker compose down
            docker compose up -d --build

            echo "âœ… Despliegue completado correctamente"